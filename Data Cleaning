-- Cleaning Data in SQL queries

SELECT 
*
FROM [Nashville Housing];

-- Standardise Data Format
/*kita nak tukar saledate kpd new format dari yyyy-mm-dd timestamp to without timestamp*/
SELECT
SaleDate
FROM [Nashville Housing];

/* kita tambah column baru untuk isi converted column format*/
ALTER TABLE [Nashville Housing]
ADD SalesDate Date;

UPDATE [Nashville Housing]
SET SalesDate = CONVERT(Date, SaleDate);

SELECT
SalesDate
FROM [Nashville Housing];

-- Populate Property Address data
/* kita nak update NULL address based on parcel id yg sama*/ 
SELECT
PropertyAddress
FROM [Nashville Housing]
WHERE PropertyAddress IS NULL;

/* Guna ISNULL untuk tambah data yg NULL dgn yg kita nak*/
SELECT
A.ParcelID, 
A.PropertyAddress,
B.ParcelID,
B.PropertyAddress,
ISNULL(A.PropertyAddress, B.PropertyAddress)
FROM [Nashville Housing] A
JOIN [Nashville Housing] B
ON A.ParcelID = B.ParcelID
AND A.[UniqueID ]<>B.[UniqueID ]
WHERE A.PropertyAddress IS NULL;

UPDATE A
SET PropertyAddress = ISNULL(A.PropertyAddress, B.PropertyAddress)
FROM [Nashville Housing] A
JOIN [Nashville Housing] B
ON A.ParcelID = B.ParcelID
AND A.[UniqueID ]<>B.[UniqueID ]
WHERE A.PropertyAddress IS NULL;

-- kita nak pecahkan address into beberapa column (address, city, state)
SELECT
PropertyAddress
FROM [Nashville Housing]..[Nashville Housing]

/* substring untuk extracts some characters from a string*/
SELECT
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1) AS Address,
SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress)+1, LEN(PropertyAddress)) AS Address
FROM [Nashville Housing]..[Nashville Housing]

/*kita alter table untuk include kan column yg kita dah asingkan address city and state)*/
ALTER TABLE [Nashville Housing]..[Nashville Housing]
ADD PropertySplitAddress NVARCHAR (255)

UPDATE [Nashville Housing]..[Nashville Housing]
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1)

ALTER TABLE [Nashville Housing]..[Nashville Housing]
ADD PropertySplitCity NVARCHAR (255)

UPDATE [Nashville Housing]..[Nashville Housing]
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress)+1, LEN(PropertyAddress))

/*cara lain nak splitkan selain pakai substring iaitu PARSENAME*/

SELECT
OwnerAddress
FROM [Nashville Housing]..[Nashville Housing]

SELECT 
PARSENAME(REPLACE(OwnerAddress, ',', '.'), 3),
PARSENAME(REPLACE(OwnerAddress, ',', '.'), 2),
PARSENAME(REPLACE(OwnerAddress, ',', '.'), 1)
FROM [Nashville Housing]..[Nashville Housing]

ALTER TABLE [Nashville Housing]..[Nashville Housing]
ADD OwnerSplitAddress NVARCHAR (255)

UPDATE [Nashville Housing]..[Nashville Housing]
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.'), 3)

ALTER TABLE [Nashville Housing]..[Nashville Housing]
ADD OwnerSplitCity NVARCHAR (255)

UPDATE [Nashville Housing]..[Nashville Housing]
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.'), 2)

ALTER TABLE [Nashville Housing]..[Nashville Housing]
ADD OwnerSplitState NVARCHAR (255)

UPDATE [Nashville Housing]..[Nashville Housing]
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.'), 1)


--kat soldasvacant column, kita nak tukar dari 'Y' & 'N' ke 'Yes' & 'No'.

UPDATE [Nashville Housing]..[Nashville Housing]
SET SoldAsVacant = CASE WHEN SoldAsVacant= 'Y' THEN 'YES'
WHEN SoldAsVacant= 'N' THEN 'NO'
ELSE SoldasVacant
END;

SELECT
DISTINCT(SoldasVacant)
FROM [Nashville Housing]..[Nashville Housing]


--remove duplication
WITH duplicate_table AS (
SELECT
*,
ROW_NUMBER () OVER (
PARTITION BY ParcelID,
PropertyAddress,
SalePrice,
SaleDate,
LegalReference
ORDER BY
UniqueID) row_num
FROM [Nashville Housing]..[Nashville Housing]
)
SELECT
*
FROM duplicate_table
WHERE row_num > 1
ORDER BY PropertyAddress


/*nak delete duplicate*/
WITH duplicate_table AS (
SELECT
*,
ROW_NUMBER () OVER (
PARTITION BY ParcelID,
PropertyAddress,
SalePrice,
SaleDate,
LegalReference
ORDER BY
UniqueID) row_num
FROM [Nashville Housing]..[Nashville Housing]
)
DELETE
FROM duplicate_table
WHERE row_num > 1

--delete unused columns

ALTER TABLE [Nashville Housing]..[Nashville Housing]
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate

SELECT
*
FROM [Nashville Housing]..[Nashville Housing]
